import Head from "next/head";
import { useState } from "react";
import { GetStaticProps } from "next";
import React from "react";
import axios from "axios";
import { setCookie } from "cookies-next";

export const getStaticProps: GetStaticProps = async (context) => {
  return {
    revalidate: 60,
    props: {}
  }
}

export default function Home() {
  const inputChangeHandler = (e: React.SyntheticEvent) => {
    const inputElement = e.target as HTMLInputElement;
    if (inputElement.name === "name") setUsername(inputElement.value);
    if (inputElement.name === "email") setEmail(inputElement.value);
    if (inputElement.name === "password") setPassword(inputElement.value);
    if (inputElement.id === "isLogin") setIsLogin(!isLogin);
    if (inputElement.name === "userType") setUserType(inputElement.value);
  };

  const [username, setUsername] = useState("");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [isLogin, setIsLogin] = useState(false);
  const [userType, setUserType] = useState("");

  const resTokenToCookie = (TokenCookie: string) => {
    setCookie("loggedAs", TokenCookie, {
      expires: new Date((Date.now() + 1 * 1000 * 60 * 60 * 24 * 7))
    })
  }

  const formSubmitHandler = async (e: React.SyntheticEvent) => {
    e.preventDefault();
    if (isLogin) {
      try {
        const res = await axios.post("http://localhost:3000/api/login", {
          email: email.toLowerCase(), 
          password
        })

        const TokenCookie = res.data.msg
        resTokenToCookie(TokenCookie)

        return
      } catch (err) { console.error(err) }
    } else {
      
    }
  };

  return (
    <>
      <Head>
        <title>Welcome</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header>
        <h1>Title</h1>
      </header>
      <fieldset>
        <legend id="isLogin" onClick={inputChangeHandler}>
          {isLogin ? "Login" : "Sign Up"}
        </legend>

        <form onSubmit={formSubmitHandler}>
          {isLogin ? null : (
            <input
              type="text"
              placeholder="Username"
              name="name"
              onChange={inputChangeHandler}
              value={username}
              required
            />
          )}
          <input
            type="email"
            placeholder="email"
            name="email"
            onChange={inputChangeHandler}
            value={email}
            required
          />
          <input
            type="password"
            placeholder="password"
            name="password"
            onChange={inputChangeHandler}
            value={password}
            minLength={8}
            required
          />
          {isLogin ? null : (
            <>
              <label>
                <input
                  type="radio"
                  name="userType"
                  onChange={inputChangeHandler}
                  value="user"
                  required
                />
                Normal User
              </label>
              <label>
                <input
                  type="radio"
                  name="userType"
                  onChange={inputChangeHandler}
                  value="adm"
                  required
                />
                Admin
              </label>
            </>
          )}
          <button type="submit">Submit</button>
        </form>
      </fieldset>
    </>
  );
}
